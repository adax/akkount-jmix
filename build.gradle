plugins {
    id 'io.jmix' version '1.3.0'
    id 'java'
    id "com.github.node-gradle.node" version '3.1.0'
    id 'war'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.3.2'
    projectId = 'akk'
}

group = 'xyz.knstvk'
version = '0.4-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.security:jmix-security-oauth2-starter'

    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-export-starter'
    implementation 'io.jmix.rest:jmix-rest-starter'

    themes("io.jmix.ui:jmix-ui-themes")
    implementation("io.jmix.ui:jmix-ui-themes")

    implementation 'org.apache.httpcomponents:httpclient'
    implementation 'org.json:json:20200518'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

node {
    nodeProjectDir = file("$rootDir/frontend")
}

task copyWebApp(type: Copy) {
    from "$rootDir/frontend/build"
    into "$buildDir/resources/main/static/front"
}

copyWebApp.dependsOn(yarn_build)
bootJar.dependsOn(copyWebApp)
bootWar.dependsOn(copyWebApp)